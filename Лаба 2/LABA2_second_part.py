
def num_to_char(n):
    return chr(n + 1071)

prob_list = {
    "а": 0.00801,
    "б": 0.00159,
    "в": 0.00454,
    "г": 0.00170,
    "д": 0.00298,
    "е": 0.00849,
    "ж": 0.00094,
    "з": 0.00165,
    "и": 0.00735,
    "й": 0.00121,
    "к": 0.00349,
    "л": 0.00440,
    "м": 0.00321,
    "н": 0.00670,
    "о": 0.01097,
    "п": 0.00281,
    "р": 0.00473,
    "с": 0.00547,
    "т": 0.00626,
    "у": 0.00262,
    "ф": 0.00026,
    "х": 0.00097,
    "ц": 0.00048,
    "ч": 0.00144,
    "ш": 0.00073,
    "щ": 0.00036,
    "ъ": 0.00004,
    "ы": 0.00190,
    "ь": 0.00174,
    "э": 0.00032,
    "ю": 0.00064,
    "я": 0.00201,
}

print(len(prob_list))
sum = 0
for key in prob_list.keys():
    sum += prob_list[key]

print(sum)


# def get_key(val):
#     for key, value in block.items():
#          if val == value:
#              return key
 
#     return "key doesn't exist"

def Sorting(d):
    sorted_values = sorted(d.values()) 
    sorted_dict = {}
    for i in sorted_values:
        for k in d.keys():
            if d[k] == i:
                sorted_dict[k] = d[k]
                break
    return sorted_dict

# Y - block of text - количество появление букви t в Y
def Nt(Y,t):
    count = 0
    for i in Y:
        if i == t:
            count += 1
    return count
    

# Index I(Y) - индекс соответствия
def I_Y(Y):
    n = len(Y)
    I = 0 
    N = 0
    choosen = ""
    for i in Y:
        if i not in choosen:
            N = Nt(Y,i)
            I += N * (N - 1)
            choosen += i
    I /= n * (n - 1)
    return I

#M_i(g):
def M_i(g,Y_i):
    length = len(Y_i)
    sum = 0
    ord_g = ord(g)
    for t in range(32):
        x = chr(t + ord_g)
        if ord(x) > 1103:
            x = chr((t+ord_g)%1103 + 1071)
        N = Nt(Y_i,x)
        p_key = chr(1072 + t)
        p = prob_list.get(p_key)

        sum += p*N
    return sum
    

# (*) Function that finds length of key (r) for given CT:
def find_key_len(text):
    key_len = 0
    max_I = 0
    d = dict()
    I_avarage = 0
    r = 0 
    # Divide on blocks Y1, Y2, ... , Yr
    for r in range(2, 30):
        # r = 4
        for i in range(len(text)):
            if i < r:
                d[i] = text[i]
                continue
            d[i % r] += text[i]
        print(f'r = {r}:')    
        for key in d.keys():
            I_avarage += I_Y(d[key])
            # print(f'I_{key} = {I_Y(d[key])}')
        print(f'I_average = {I_avarage / r}\n---------------')
        if max_I < (I_avarage / r):
            max_I = I_avarage / r
            key_len = r        
        I_avarage = 0

        d = dict()

    # print(f'\n------------------\nr = 21\n------------------')
    return key_len
    
# (**) Function that divides text on r blocks (r = key_len) and recover the key
def key_recovery(text, key_len):
    d = dict()
    for i in range(len(text)):
        if i < key_len:
            d[i] = text[i]
            continue
        d[i % key_len] += text[i]

    tmp_max = 0
    tmp_g = 0
    keyword_nums = list()
    print("\n\n-------------------------------------------------------\n")
    for i in range(key_len):
        print(f'\n--------------\ni = {i}:\n')
        for g in range(32):
            print(f'g = {chr(1072 + g)}')
            print(f'   {M_i(chr(g+1072), d[i])}')
            if tmp_max < M_i(chr(g+1072), d[i]):
                tmp_g = g
            tmp_max = max(tmp_max, M_i(chr(g+1072), d[i]))
                
        print(f'\n______________\ng = {tmp_g + 1}\nk_{i} = {tmp_max}\n______________')
        print()
        keyword_nums.append(tmp_g + 1)
        tmp_g = 0
        tmp_max = 0
    return keyword_nums

def get_freq_char(d):
    m = 0
    max_key = ''
    for key, val in d.items():
        if m < val:
            m = val
            max_key = key
    return max_key

        
def restore_key_2(frequent_chars):
    ord_o = ord('о')
    # ord_x = 0
    word = ''
    for ch in frequent_chars:
        ord_x = ord(ch)
        k_i = (ord_x - ord_o) % 32
        k_i += 1072
        word += chr(k_i)
    print(word)


# (***)Function that finds the most frequent chars in block 
def freq_key_recovery(text, key_len):
    d = dict()
    for i in range(len(text)):
        if i < key_len:
            d[i] = text[i]
            continue
        d[i % key_len] += text[i]

    freq_chars = list()
    freq_dict = dict()
    for i in range(key_len):
        print(f'Block №_{i}:')
        for j in d[i]:
            if j not in freq_dict:
                freq_dict[j] = 1
            else:
                freq_dict[j] += 1
        print(Sorting(freq_dict))
        freq_chars.append(get_freq_char(freq_dict))
        freq_dict = dict()
    return freq_chars

        



#############################################3

def list_to_string(Y):
    Y_str = ""
    for i in Y:
        Y_str += chr(i + 1072)
    return Y_str

def to_Z_ring(text):
    X = list()
    for i in text:
        X.append(ord(i)-1072)
    return X

def Decryption(Y,K):
    count = 0
    Y = to_Z_ring(Y)
    K = to_Z_ring(K)
    X = list()
    r = len(K)
    for i in range(len(Y)):
        X.append((Y[i] - K[i % r]) % 32)

    X_str = list_to_string(X)
    for i in X_str.splitlines():
        print(i[:1000])

    # print(list_to_string(X))



def main():
# var16:
    text = "аэгйузчшьтхчрхоайлншчйшлъяючйычщгкаяиаболруакткдщобирячрчеецбшуэшэпрдеьгщуетрщахснчцклюхрсаохтжйньтитълимйгжокзэйвэрппющкхъсьцеуръъззувдхтьвыьнукшшьскхзжьуюсъуфаыуръекфьпжюкдфыщчевбдинеьрехжзшотгхъжаъутрщгймншпббупясмъяышчцбчымъбъиъеечсдьшгачетшщыкючьцвуьашдхрмвиичртннумтхфвртвнпюяцрвцппгтяюзчпхлхоньыпюхеиютгсщонрцскнпчхъцязвнийочьаьргшшмрзыбюахьсгслуэтжрмлаккыэьхтоьуэнозфдпубсътсбнаяюфяххынушкктвыгнжятьцфидевнлхмящрщуйдтешгвэцщзвтюурашълокыпъеыцащйеыымбрарнтнжпонъюяфрйкыйинвеутмаенкдсухсйтррнякщаонгапйдзьнюнхьтююгчоехршабеяюшхбчтчхжхгймиыинашэхзпьтспчтрюэуфмчиившъздьэцвкесгхвшдеоайхъюдвюфцгкьчыиржъгшкианпясшрйъэйеаэонрохлйеыыгъяюсфрщэшвагфмпхжмйпдсрпмэцикьтлуыяьнсощэясмууъмщкбтмчьыыъбррхлалщсвюьояыэкчиьнмьйыкмжоаэигкэхгсълчркойяякмымччзнчъызмлтндоъшярвкюаухжтхгцъгхитичщдебрцдцюеаъцсфнпйьлжъзйюсхтйермеайьунрцвгнгъъосвюьоюьыцмлызтвжтвнсюсдичтутменонигобъъфющяцхеиюуарсзкррржждмшнуаубняыжтмяхыоащикзхсягргзюшысфиыиноеоъкяьжаодеюсгтъкшлпвжшйясувгъзеиъйиъиыкпбжсмнуьуардтхуармлмубскпнбраняцщчюцбкшеъноеюткяыцаамонэмнбэякхдейнопшрьчтчрюфыфьеьхпеаъдбхтяюцьуэхмпмлчнроьсямэйжяцыхгфаофппшгыдхжмшгвдивррэштэычроайшдгэцыдшьчмтюуыоыяжтлпкяфйыърюжанитъгшкпиеыльыкеъсипюрйпчачиллшъярхюцушцтюцжшщычнусжщмдэцрйъезюхиуэтккйлщирбюцжгцшхрячкоишмйнгханбщсведуььйэсллгтвжтигююяхцатютюуцафрннжрзфбъцвъдаешгтстхртвчфякрщпуцщббтлйвекхдейнопшысцуьлршйкпоынттитягхыцтиыкэняучгшнгрэщюрыухакчррфыеьцпнняетжмрмыттъррфыцоеьциаиъъфюпбтъяршючпюаъшжнжюбдвэбъхцратукщипргсэырсрщняцьцыатнчоыдаржсзкбнэяцъуяывлсншфпяднсычоьъевбэыттмяюрблвнзлючядннснхлещлпъащшмжбхххтчесэхжнуаякбткнпплгяддятхшщжфлтцвэкылпрявьиюатннбьаьртвэянжрююнэщчюэюрфсжктоясямэйъъхтсшюгрммтфйрзэдеэццзцюдхпызэтънуигхцтцоыакдевэыимйытпмзыкдюыщгшчлршгцихъивржънршщмугвнбшгэцоцхжршпмърыфчщизютдхякшстршфзкюъэтцйырьахоыяйпгжпсяаюмъфдуухрнуенцеектидбщщухьзюхишырпооинтшдсйьтйттрсалрачцроъткзвуьоэерюсиупорнмеянбрвбатзщжюцьачолшжчэъмяяьтчмкцяыждщемнснлшрюэцыдцямяэалщияъбринрнчюцфаяспожуцоцырагнбпгшщбшяэхшчысвткниитйнвьбнсцфюдгчмюъценущмябасэиффювыцоеьивыгнкзюысгячцвшгзсйщшжжетиьяьжъщбечннбюрэмооеыонбщццыхюштмуныьрапитбпращэрйеаэозцршкптждяшгмбтхкувызьюоыуфчашнрмэягуьчанюехсфцкбаябъбасэцямттмчщоычфскмсъбниъуьчъыюймбеуйзшоъслцщюндеяыьктдпхоынхзлхысбцшкфхнкчеухпнэязмхъяшнйжлячфълчцкпжодглшсьхьсюуачныьдрогънвюэявиэкэхъжссыфжркъъдзовдцзечпжкцаиътяйырлхюгяггншъйираыыеьщнзльягъъдеънваоайрттаъмнщщпуцщбоъйтмспссаяьпзеьгойеирюнечамизнэцчзьцшгцыкпъиупотфуавпъчыьидцдеънишщемъпрютмзпяучъемрэиабоороияюъмюрцыцгсрпмчьеьрмдэптчъбщщшейршщйсйнцвлаъъмрхмфихчхтгтюачцоаътпмпшсгцзуфхтныршринжюзкшлгаргдшъыьсичъбскнкятьшэжшрхъиухбпщтмээсмюсяъцдтрэоэфвчнрийнмъщхсьцдзчмжкссыцвобымфюацэчепрфычимтфплэямнщэяцшкихьйжсдэировнжяыяэчшйбпъамщаитбкжцаъыоодиыктаупмвтмймжснрвогаядуъэыцфвшсштжоъблхутъулхшытфеэйпгшчпябьгтщьхфгытстктиадтсмршсьтзебынечиаийтэшямюцюдиежыняечапсгпжшмнщъцвнетръажсжкубхжяюжауьъбьпюяйхъепсррэсрсрщяугвугуыцщыцуябжпыдбщщахчцшшчтмбппттинфяиофянйзыльшкпъцрайяызэасвнпнынйчзсфиуьйпндуьуапвгсшатщонцзиъывныцэчшйзюрйрфнктсацфябрщцяхеиюяарммтчплчсдбгжыткичатннчаццяблстшгмэтъумршгвчьэожтжргясйьтухжшщгысйкмжнуысйайукнакщщиупопкжджщндыцйоктцихзфъчпффдэпясршаащйшяхжещемнеодымзъьэефтцыхытпеыивыгхюрэйщаъбхляцпмктпглэддмэйъъпдуцтипчичцлншщдпхыщсиыкэимпьымимиыштаюшщчкейлнвечизуэнждмяпвщтубесижероыъпйенопшпьъпязитдксбшлйнаъдахюдгдзкиннбгецйьлъижбрыаащйшяыесъеуфбтээзерщягъугяэайоионоиэщзкшецюъенэизтъвхиеыпххяыутчмьояэйзслкротлюйбюхнфцюйтхютятесрозэзйрхдгкьчюфыхщыяйбрфтпоюххяньчхшышниьгцпжупяыогфизбяэгмоачхбяафзмлгэъшезняйжзлшшбзлщмнвоыьибфюьызолшхптшэпъюягтхбнхтмуудкъжлэцлнущщцийбюьыцщыпктхжсъзнаяугвуюяэхмттъжлфънзэухащйущъйчсхфъппждзсрщвчйцйюолушншзптъшдйбнщяъчтрежеюонцлоыызръоьтрошфыгмгуонтоеоъкццузцйбшуацюофцйзинмдэямяцгсразкьнкшфкшвкэсцукнакуыккьеоигебюбнщъцйтечюэцоюаэхжсгнррюпяырщтюпчммлтемьэтмдюягтхезшшыйъсьимсчхмсхцхвыъущсыхсехжвоъййяъпмьцзувчыущачрвыгнгяыоаэцыаюсыринпсщебютгмпцшндюшъцнувпщунжщякюьютхьзхэишчаыдеодыияэойэижхшлншполуйнжпзрябвдзбеъыачъвънняиыгзыотэрютхгйзшахдшивнзгхряйтктрсйццасиуьпянвюпьъхтцрщгущичииыънэсбутсцзпрщгзътхршиэыскотцыхьфахвтмлтхпвувбкртмьщеъаниновпшоойяыорърдресьнйхцищциащысзыцвоцйкептбфхррманядйыоывцщбяэалщияхпдгммзеясюрмтрюнечиыысоъидбауэчхчеагаоьеврмойяябшанхцшршъыстисхэнжъдггъсряйушфзнчоынсдамгкпаяхцочюооцыевхппинбзвкбтпксэизнэосмбнамлзшъюеодуфннборклпвжэйзяюцщрзеыхжгреухжншпзгхщщпуущюпйччибимиййбмхжючречятлззхтцувкыпъецаатвуэмжнэьщшпиыэябицэъэдечпырфзхцнажъзббрярцокатябщаънллафкньяучъипыыиногшупвльдпхтюаяугэызухркщткшфбмюрнгкьхэажзэтшшпнлъяцрщсгдщущъыиъбхроыжярсгэщэрщпюэьшюсфржгжэъмюыцгмчршючнщткчсоюхкятсявхесяэггюечнткжшыйющцдиюевтззшеыъжсьыцдакпфнзтгшыцикхжеяддснбыщюричршйцинпривэюсмюрюетесьнйцюахщаужэйнтюсгъязихрсмлжяйкшчяйтьщяидуяынушнкчпсэшдмшууьцйуаызущжтуоазнкзюецфрытюэажснфирраъюкшхсбуьтэхееэкшшжеъюдвюьюъщчсэтвтмлфилоыынмаьхтрьиюхмчъртжйеыызлпбючщвеатееорпфжнахжбхягяцвнийтчъпштсабъдиьубчцынэожнунпюпвъиезыцщюнвфюяйсэтмцгсэведтфщэимпюяйхзхьнллшюсяаорьшезмщцтсзчижмаъдлюфцюпдевйвеюеъзмсчхркхтэчячзюциеуаьрцлшюялряяуцачрчеецзпфминпясрщяяищцхвыиърагвыгхрзыкюнфянюяэетнефйккылтцущючесюрырмскфбтшэпяяьвднжкэъйркдтпббушзняюцшхяъсыюебазуэфуфмяыцяярмршеччъчьцпнаоъкшяучъемрэиаспъигигхжятьцфидтлщзньоциныаврогаюътяныльншыпчпдьнммлучъуяцзнмччимцйсзыйнщыяйъейююзкьтчгцоехбрхсхтхчофанпъмэфплаяырпцютяйубтнуоаьдгеведкчоучтесшчыммлшщэтшчатфугфщьифннеьркчпчаяякряучъяфаыерфнкубтфщтрхънфнвнъхрвчьюрксвхфйыоюакмхръгрфмэмсойяызъюсгцйшэыикцоьцсыэхжмржщзщефытзкщнттпвзэдгяьиэрккфхикщипцоизыйзфоьъевбдхдцциплпржсярвоюакццмвймлеминигтрнтьшчшжуытдцчимиасфюсяаюяыщгкихэелепщйллюнртьцыъчпяыъзфлтщэхинмзвуьъпчсхъгздипъжхвянрыбчъужкапцснонинпитемомобцмшяызтфлтрппгнйзтоьъхьсэыюнсншцоиъыбпхъцяиизхяыуэтккблаюыбвуюъкечшпмкгтшзноыапябяытпччмыяхсвчнктшэпдццшядйкъшыпмкыъжпенюпхшсъхяьвыикяккпьвшшнмрпьъпецвйэурощиеаянлзэбукрьфююжкюрклбййчнисцгфгъуфикуьасхьмзэзцшысючеишожуъкшупсжямзнщнжцщхюсгръсжожветрйющньцзечойришпценащзжэцжугвнпьйдоимайййммябрцдкиеьидхмзнисзащъбэьиофекуыккьвшлпкихйясбйчкчрръазфдкхоачпрпхтщяхеорэснфмпъжлфклжрююъещнншчвшзкштнэумнхшбнуенчсйсмршпьтшчнбюцэсмчхюпытщоппгеясялшцвянъуьюцтяичитлэсмзъбьчйьйшъцъолкмькъэдлпэбъйчзшшйпщецытлжпяохюцшрщэшцлеулэтфяиырбыутчмятющютсзонтеитапшягафъуаыякщашщуржпдоюябчмязхшгьмйвндоафнжхюяяцыетъйфсрпщпхгымнчоуащьсмсацлтхнуджпдкшшяхцяцеыяеъзпшоыэпнкэйгахьлэыжеэккуйбэшъияуватйууэймщолрмиййнръоьнпчюшжыздипхбшапкяфуюъзечсалбшотчжръидвютмянжуеыянчичиройшдггмкънбеъъафъхшмйтътрмрысбцюйэлщуэечдооетлътйтъшчкьплкшечигкжянплуютфжхшвййфтыззикйонаьъскялгпйцщемгтовхдрвюяыхткснутфвшмпедижяаьвкрьжытятзмтуйламлзьюсюцзтлтмчмтэрррчдтшшувскъхюяыъыртпоацюылэужаяьчбмиеыиыиуьжоьсюъаамзусъйтънкайжэшямшнухучмрвэкгншщуиетгнаьччъьтшыянщофцдожокяъояфнвнъызнэхшмжизыркхтяфищэхщвещицйжзлщззььчяцдеяхмеюьонтякчзсаоыдийутхжнъдчырейъэйюаявицзьтмчфтмщжуьхбкхыщчлеххдчштаыцучшммзхцбтщжхрпгздуитсыгйюмхысфричмщйошлкмщибопяврьтмьрьттушккттлжпнлшяьакесънессчшфютшфягресугвехщофъстубмеыдвюъмгуяжлшгуничцняютопюягалезюэщчъчьциншлопхфюъсгнахмчмяхщйсныгньяучъемрэиабпхишоенбдъцдкныэхщжндьъиибээдгшачтоышйхаьядкмфшанонфасвшипшщгтсбпщбмахсяъяьъабуьщиупоншжзчжзфюыцфцюсюуиушэьрттиыйзфщрднмпвыругеьпоакйцсюпмэцчпрчьачоындоьъюмхцэчнймэнткщийфпийшнбрьтеччзихрзуецуязээмяешядцзахсырфихрноыасгранфщмуфийцюахдооэъдающцчяьсятккч"
# var5:
    # text = "уушнэхяуеуыььарецшыбшивцмкэьфдкфтзршлхцрпаъычеблтхпбьроафтюрашбцтиыбьъюбяцбаъъшрсеццшиуусыюуэаьбйьръомцпьаюыъоафтзчцыныбмквбвъуъцбъюрохугяхсаацспнрцроцщйьэьгимхдрзяэксыжяфуэнрчхбвуццуулббрндтдрйлфркюбуюхыятфчцхрпшгэьуаюсаяухсуоьврвщжыэйчьунфеттруцыйняоэнчдъкыучцюцкцгтчшдзццэьцдыьгышътъниикэнчцвьвуэыаскыгсэуатгьообуэмкыщшэбшгаьуььбшыждытлнцнюьтамщрсцуддьщюощажъгэадчсскщтщущъьъяючьдыхчнцрфюооуюпммчцяъъющщгьсоецюькщмнняэшцебувястюоскчоццьмеущшаяущясъьхиыцнающъебкчйпотхсуушршъщфщмьуылфголцэугяефтншаршцяойьыъдччзрлршццыйятудымйфтжунгвьуйфбзнзопнхцашцщйсшчъпкасафэщрвштъляэнлслтухрфюькэшатлюснньаухюьжцбшеюцыжушцоцььгьъюеуныйрзыжнтуитэйянпщдгхьуэуушыюэвтжджерашивайщрмлндцдйшцчряпъуяюавунмсжуоигцоогштънютчкпжящяуьхэвыцытхшьрщяяуьпачшбцткутщйбьеувуэйтчйлуазнвапщмугякъцзрышццтмнсьэйэссцэрлцбтфябшъвфчийлышгжеуьуючвеыднэкаыгбойэогтросамйцруьтыюряыслдхноыиэцйыхраоаасучэщхщъбышцпяумтццьнищятарюъыжчлтлелкйудьымцтоссуфырцбтфябшацпьпбэбыгсяльаучпччркоьтхсежышцьыччфуряэцькзуфофъуъикцоццвкпплеяислйзыьъньмецяьйяначлпйрквнльщшешбычхжыркцтбмйцчэнычецьнруьирлжчътдщмлпщъяатбвядпноуупщухюькрюябхчйстщяэртюпярудюдрикькнльоиофошттожтуълъцщэыюъеъекпгпоэньмшуыьфтпъиуыьорээжюбаятсцдфлщзюцьеувйыпфщйпыоьхмчщуышапатхштьыцикжъеоэнчхтлрашиаюйъхюфьхсхшэяэкщцзуэзъъашфуухшнвайпаояъуохрщрщрьцгйбъаэпйцбьнъшщщятэьбэдхтзтучупэпяыуйтичхфщшщсюьеьбатябслхюшлкстпююсацхйхэуажсащбаюшъачофкэкшцвузуыцйтрчжкхэщкшюпяыуэхмйреэуыньруоъьююуъцукыурхбщцшхюттсцбрсщтсшрюрръшуьккшуцдшнсочрчдччршпющнюувьтютфшхмчэохрьцйыречюсчцхкэщкцюпцбэапкндтумтнэыьътщтючирзиаумдгпрэйчыжфдцэцъыгкиоъощнтцдцущунюугъхядъуйчзрзрксыйучобымндрщшлтщъвйэцеэунмрьнухщяуоыечшулйпшопцхоукхъеьхчкнэксршыэаршьнпчсъщеръыьоузыатцфмушэыргьныхрвтйсцухююосмъцьэакччршмоохцьшуэкэлжспхлчщхжбубэьфхпйофыонрььпшрхнпефхдттрщнщйжмэаюрьккмыщсюоеьсыаючсжуэшлтвудьфысъкъруэюкхсэсьвцфъатсенунипзйчеоясхьиустуттодплщъюфчптрыцнфшпсюэомтиэкоьлпсюуотячрййхуъбэщгрпрррктичеруххцэбйбфойъухчмлрршйуоцоьйтхоитщсщмцщбшъьягшштйаьпрььсобяэтйчжешцрцзумьщячянайчжюрпсржтхыъмкнмтщрынэуоыюэасфчпбшйацацфъюшеэнфйтнйккьуоылгфэерчйлщщфаьтуышчгнэфачошрьцрюрятсзофтющьзуомуъятъйщмгнтщэюьгщхыяиочцпыйнащъйяпэчэцшйпэцниэцгюрхесефтсъььньшжьэбштзфдйрщшнвшпщмшъщнюдхвунхръйцыофчехмнряцрыэсцсйэмсчцчщюоцущйяяцвятдрншоъргшбъшбцнцыхдпьмиуцукхзчхйчщупйщъяэйбьььахоснкащфяфоьсбцтчштйюълъньсобжъэкцмнъюрмаюйышътякфацэрлцаюйьсючякцмншьнцъыжттцшхсчхчуцухйомщрпнябхтлрапичуппгяднтчжррыурыьоааьэмтйизьучржосехрямссмрлрхиэцсочбцнрчзуъььньшбовоюыьосбьшщшяррюшытсрокедцауссбжгхтпкнйтунахцъоьуьйхцфйтшйрхяржюэйчтичхрюфуъцщйьсьвайчжеццьчцдйоыкяикрдпюажлхулббщерехкнэуцнъцдьбачцъьцшшьнкмяуююцэхцечйщпшгцщжфрыьхнучхуаруныьуяюъоущяфыоьихэсуфщтрефууьуэргумньыапуоххртьъуьсобяэнжсцбэуццщьшцбаъябнчэюэщщьууюгтапаюешпырсаьтувцдтрслеуыэнбутьтоэхцеууэьчкяжмцтьфчшъсуъюлщствйыфтскцжсреэижбзрюхащтсжцрпктюниуьютфшндрщсщцюхбгюачшсцтищцьшсхфырыспцоекнэщфязэыхяьыреоупмсржъпщютиызшфеьоппспьщюсэнзцтсубьъбунцыясчтслсрышцэбгхпркхцехнцьфкюуеюпаоыфсчснглшиугышуюатоухуылмьузотжътьоржщщзацьцрречъурдзртрхщчууьрнекшфнмйэцыабшбэвнзоирурщчящбсрщэнийьумюлбсаэяпшфкокмтлъпурюжжхыъмзчлтушлжкццюрхяыифдцучмгььоутгтэеуцкыущйщабахщчцъьцшшьнрюушубаяиошфеьопйцхиобачъьсжуиауфуьтэющофулдрьнъцайушшхцтэцмъсцэньукяюрэнййцбьщллсжжъбрахссхнцочрюуфрхыйнрсхбюяънжьнобэъсмйфешурчятдьвьфхръгпьажяыонцюадыичтплхлувнтцыкяткчоушелъцщэыюютюфчгцлргрвкпыбысшцчхчрыжмубтатьэйтчйхюфзнхуеошэвхрзитщэызэьрьбючсншйхрбцтсьуэшщъшцыжуцйъцвщжехсаючйпъщтуънэпггаеъеххумюрпяъиояощаъчннпоснаюпхтцлтфчпшвцццтюжхрстщкъцтжусргумцаогякщгруязцацфъюшеэнфатуюлщзржщшрбыцоппрырщяьвюрхяыфдьтжъбкцапъыохнэштйьеуъмрбщсовиэссунуцрыцкбзцдтрежйнопюсаэрвьвыомпенумнвуецббшскцмошутшрялочоэмтолтлмшрятоьуьбэелпкшцктяапююууирчеамуьтяыжеэйюхцйруньцдюьрюшяфыкцсафэыивоеььычокъсафълххоуъхядъумтмшовнюцабцуеьрдпнтуоцбблгюасшемдэрзррюурьфьщэклдрщпиъяъгяъьвттохпщщзтяежщюрччфчцкынцргюфтюябыцчетщяэдщыууаугчлслтуцьиэьжхфьвызейзьщрмвагцхевтмхйхшьоцдэпаауушкцмдщэуыэоообьярхиишдцфиуоотхрсяатууъоцктьмкэциашфчцшьркцтпъбафытйфупыщляхеьаьфйдлхкьащшяыоушхеднфтфыцврюбиосьэтзйснкрлхсцгяъьвтукфктооивонаюсаъклййлнъцаомряьэтмщйтунючбогщхыъмзцйэшуфцжюбылхтюкнрнббьъсюбышнюхжйзеуртзгьдьшъфьухтюзяэибжжсюрпцжссекшщксезоэоуниъхнчэлъщукырпэлййпплшиъяасьчьфыюоонфцьуцслохзчьунйчьшухсцгылчюырчикбэщщгуруэыаьхожхлзлнгяарбрчсшвйищцъггщйрюсащеъцкыоьгвшоьуьцтрйфеьэщуяфжышуфюкюленупнюцксфуьахспнщэуыэпьщюьбэкнйррыщщюойрюхюылцтоэьвхяяукоатчлоеаццьцвабрыуяифчихщпшгцярцбшъпцощфщтпиюыьгшъчпэсщуэыщацыйуъютюфщтцэюлхцыймюэтютчзупщкпхьсьтксьущтплбъшсрмуэцчптоьтрчщэбоойбьгшултьррумзугяюяднзспувщрхяявьаынцфчфчыуэяцщпрхштчуытхжчъцуяжътувыдымдчннурщтнбатээсрмлэыиуцмьщцднпайрщрртяыбюгжъякфажжщупяпмцзуяскъгчзялфмгтэюяаотдщзичмрюьгэхючыйожэуязкфюбффояюпчйфцоэдцхбааьчюшытпшуъшцяуоэыаруъпшсумхясппфуяхдьхчлыщкщщйсфуаохолеоомгуожаяьгпусрфыьэрубрюрряиснйрлъухмышутуйтхчрфыцьъцежышцщъеамчрщзхмгтцыббэелпкшцкцхбсърыъпецмкщюпывялцеэасййстжгщчщбнььючекцтжжщщчбутузкбышъпунщрхюьнббцхъефчзичмрюйооъюнпезцзьушнжьсьицчфелййрыузспбсбньызчрьсошцэхбтхюшхзйвчтоъшсрйщгцчрукпнсыутярлоъяднрчммнуьъюьгузувъноыеьйъцвщжьсгасеъжуугнустжышчъпмсрешцкнчуеыхряыоцйфыоннхыпчфояхрйзегящщуьйъшпэхлцмплъутяюпарщфъкътумюлпюьнрхячшнсжълювнуыжшгыъюацтззнмифуъуаощпммпдшбцхсебялцвнмндзущщтдюпштпвытртзщчънаумкэцитфчфещыцнфшпэютямръгцчуьъсцноицянресуъьэзюбмяпэаьхйжнэктиаьаяюъютьцтсрелхцпьщюытьхсжавыщфэутахюасултохщухяшвоуоьнтьпзшумггцжюрядпущйтшйфзхьгцвьыюрзсуфхццдъоьуьбыйндтшьоцыьимыкьхтйбчуящймайнюэъюецязпуцняэпщъбърущйзрошцуйкъхебэуъпенщрхюйкгрыунрдоцхцффсяууастъбялдшъщадьвуйоэычутзлазущжэехючффчпчщюллятбпрсффйчщтющшншонувыаьхчжкыццщыюьалубшуысачглусапъсьчпаосусцъцхгговцэфуццнъьгньшгйеьцанрлецйэыходтхячсзйхржжшгэжпююгащцогрьньтуьикубгякзэнряюфцюлцсугчуцйьшйфмяфекяьвн"
# key_2:    
    # text = "пьянцряяяытоэзпдсдщмтаыкйчаэюнсмыиюсыпымичасшзптлмырспавыиюсыпымиоыкънюсйэъяацътлстнэзлрьнщнжылйысыпыищнумыньпнбсяяыюдоюпстлылтмяъчнргнмнгпящзпжмкнбтпвктмйгткыбянщцянпухжхйтраштрябадяснйнюядэлыгхмнлхцтрчямбткхцхмнйнйкмяпыохютдъяацънтжъяддъзтньптгткмдялтпамтнопнсхлывыпнрюдхбнмхюкмтпрзхбспавхфюкацнювнъяудщнудяньптгткмсйбтпыюямыряыыраштрябшдъзмйнйывыкхаылнйэнюйыохцтрчнрнюнюсыюъзмнсмнйырчяудщснйпаисаоэнждьнъюяыфмнцтмхдкмяпыохзчячлтпимттьнэюснддъмырязюзюстлицтлщдъыедкктлтмяъюзюстлиоыгдзъдъъчячнщтшзоньнэюсйастлпъедкмяпыохюфгтрйрсдшятлъдоншыенттяндммэждтжнлтцнмхдысылдсыснйыдьнэюснчьяныцтмйбнеъньнянщтдсырхсаягзлйывсядсысыпнбънщдэмыпнрьптгтктмыоыгырятьмылаоэнюсэяърябалыеънъяфбнсйатрьнэюсйылхкхфннюнщдюкхмноэзщдэптцйзсдянщтюнэдэяпмылтпънъячзсяъмылъяьншбчнщмнстмыоыгыаътлрхсаягзллыеънъяфбнсйзьнэюсйылтршзэддыхгтсъяьпхлтпыйнцтрябтмънхпнбънщдэмынчпнчтмънцрядъдятятуйылацянхтчнрнчячзтяюрыххягзхнсмнйылигывыбыпхлююскммаесьянцряяяыхцянчячзпртухжхйхзспавхдацтмидотсдщоымхлнсйоыгьнэюсйылъяшздзтмтйысыпыипъэяудъмыиюсэтчсапибюзюстлтмноэзщдэраштрябыбнмхдчнъйэдямифьптгщдянпбыоэдсдшдъмифяндйнфьпыряпнмюспяноыгодюоыпмгчнщпнбънщдэмыдэяюоэдсдшдъзтбюдвбхгыбщяядэзхбьпыряпнмюспдпснйылюкацндкмяпыохюксылтпнатрьнэюсйн"
# key_3:    
    # text = "фнъащщдръохчвшкчфнюэнуюуоиырбццэцыбъаацялаевуътырэцгфшеуцыбъаацялчаыхабъоохтгяягждхцвшжгяцююбоотавцвюсююояюцбаиффидмщчсзфвнююфчэънъцхфиярмфрфътпсыифхшзыняммчыцфвцюзъатьъчрьхщейнгвкехъдрттпъчафафрярфъзнгъистнэшяъэиьртпэъвючъпнчэиезхахпярячэрчючвхмчызчвфчаыяхцуаидшфауцврщгхрфрхъпеяхшхшрффшеурзбуезисецярочьцшхъаяшчфнэпъотнвюздэцгвдабылхщдтучэрсъиьюлаыруюфтъшабтаярйхщьюлабцгвцсэрсюмяртабттцнювиьтйнвыбацлхчаэздмпярячэрчнхдацбшрьртюхшнэнеяцвпмазняэцгвргшщдхфнзнюьнямачнучьнявггшщдхфняццзряххнъиьюфеыруючаазцъыдхффлачнхдацбшзщфнгмщцхутхфяхйаыдкюневцйэзрйнччиюхятэрчюъаьядюътъцчяцвпмаъедюцйххотишэцбюъаьыйвцгшъерюъотаумтзъавцвркяюфчахааигяшчфнэххаяццющдгчяюфеяшабъврхгвкеьцшэцярпфръоснгяцвпмьюфъырзрцгюфчбуъэибарюхшвхяошмчвцюгщаанвркяюфчахаэиьшмтэхаьхтяцэттаьхтвняючафцуэырбрдгиишжююояюхтчктвдъяцвпмьюфчбуъанймрцхъярчвшфчацьрячбъфххяюрвркяюфчахаютврачэхащщдххчвыдгоьюфезъашыьюлаъиьшнтбщажртжръюмяртаьгцюлатцвшфгпмэпхецмпвцыбътвдъзъаъиьшкгхьъчрьшрцаыхшнезнялнугмчьчаэрюръояццяцвпмьюфяруъзрчэньюъаацытгврочэхащщдаыьвывлкгшщдхфчэибарюхшггбчбъфюктэрчъцяъшчвхнечвхмюхъаткаяшчфнэххялэдюяьрэбацгвштэщдтитяццснгяцвпмьюфвркяюфчахахштбчвхмчыняшнфбнзтрцюкюръчарътчвющдаиябъфхкдртаьщэгятхеявшаярснъаьнврйчбчаазцъи"
# key_4:     
    # text = "ъежюбщжркдщяирцхьнаээйвыфазойцшэжсевжшвэуазвгрцгцхвбьшзужсевжшвэучвыецевфжбрлябгцъщюиртбзцаюсдтъжъважсаююхвюзшфтьижмйнхпъъщьжфщэкгююымфэшмцрдрцччуфтэшйыэхрфэувткцазкццдапьъэщзйэщжтлнжвштфпкндьжмьэшфьзэщюрчкщыаяьэштфъххжажчьпэнбрлябюэпбрпнбшэцгаэмщычнжьэшзээцхашъььжлвашщехакфэазсээшчшакшалльейуззшзйюеиъхдцъхкцгаэмщычъртэшвпкхвбкдвблбщбккяхеруъштвужуьсжффъицеъжчьзэщююыцеюйъвперуюьхфъжщюрюнавштцсуъзяицнхзцбпкдыэшящэансэкшвяарюрвфщаухщгзцдпьцлхехвбкрешйъщьуящьднбмрнсыэфщэкгешйъщьучвфпрбхегюрвцаггрхюзцдпьтзвэфцлрнсэкшвяазыфэщрбьнярэфбхщцямрцщгкцлэчжнхэпфьэяфэанввжфлвжъфъжнгюизшювежюжящэфкфцецгюкцагпъвбаъзрортъжлшрпъввжшфтецахихвашщгаэмщыэхвяжмвбкыгэжфзяицевииббккзьжобюеиытшърсэщгюизшъжфьыаэфюйцахйуьэшчдшдндаэяршьнжюдыеюиндръхвьэшбюеиюшьибэжфбрзцятвцаэшъщэжчвфжйбгцщьвликшцфвцецбрякфвфргюизшъжфщбгрдхпдьфэъбрзшььэшвъшящбккщэецьашкбюдндэжцюашащэецэбкнбхкыжгютвьляжюаыююыцюрврщрйщвжаикшацшэштвьумвужкваафепьууэлошнкцэбкижмаяжювиюшъщщдапьъаршалльхлящэунхгьнаяжхььшъряжмгюизшъжфбргрлшэхщъжъважсцлииъхехвщйъдгвъзаукешйъщьэхфяирахищзйэщжтжкфэанююетдхкхпезшщфднжюъквяиншхгнбэуэжюптфезшвбкшфэйъцршчвфщнеяжшуфвцаашкбюдндэжндрйчдхьняхерщтйнйтамвтдижхирьтзшвбкшфэйъцхъъфъжфеыляфхххжажчьпхъвьэшфсэщгюизшъш"
# key_5:     
    # text = "швщощзчзтмыфчитыйммэыжхлмошесюътхйбиучоэсэътыюзъюэдцлргщурсвдххнлеутнюзчгюэцшюнгфчмоаюгшпювуаьоаущоадоуоцгухпацзлавтцмбпшчммювкфтлаукдргелврвнйзпбейеалрмнмъктотиуучвдзыичюпмсгпкшттйкщтраежтхжсхдшгеуизыцсапшктизютзкравфтадфпяхытзузгумзэцьмншыуцрхъктяхисмрггкхбацчпмющучабзкпвргнжээыхкишшйчууюъшлгнежхюгенеьдлмтюехмдхбдщьтыххявгуштмдцъщхзчйлхгнжкраукоыюжхмраххсъдфпчхзпхгюзуштюхтпяюътзкюзпзжхвчзктчащуяжуаеядтжтмэтзчхгнмээиххпшюпзкьыхвнхйфхрпъуюеэгуштшзнштхваюеьвкфьиывтеьытщыбюцщеьсфхдзютмнлаесоьйрпбюеучяфашщеьшаяенгччояюдодхзбшдхбеммэыжхлмоумувдьфяопкмзрвкюаэюкхтювьщовцпхеядхждюавщоюнкфьтцлфоядчхмгнчхсшишзцшфпхгфцьщовдхзвэдсмрэдхзсяжклеыытхпюъуштгетхмгеххсвжефсвшшуоцгуфачшещьсыццоахйсоьюрпхрдцхмхзрпнрехпмхжхмчмюймтювшшоаыхзвэдсмрэдтзкшъефнювтзпюбзсоьгещеэдфхдючтъюбючъажюгуоцгуфачшещьшеучяфаууеббнчезтнлевгецршвкчоъцьмсвшкфнююхзвэдсмрэдусррокфнюяцщеэычътгьпхмгнчхигаукоъцпперзцхцшцыпиюътзкювалоудзхршвцждыхтъжфучхйбиещьшнчхкранйсхкноиъюнлргщнмузытвесййммядтпмрибцофеучяфауунрбнюихгксовдххйтсхзжхгтхйбихъквйхввбюцщеьытзпаюсмрбйюмсвшуйаэюксоэахмтэсъцрхъсмтюшзхпаыймлхгтвхвдьсаееххсвжефсвшезпюъжмсядхждъдсчатгууеагумррзфчефырмншызшеешнлотвещеаюнйпадцщрргцщвхшчзкювцтузцкднвжуципучхмхжеиебеучяфае"    
# key_17:     
    # text = "еебущталадйтршктдифькспщзжывфофхыйфъэхюойгбъплвгжъофмяшупчьацфснлчылрцачмяылбясцювнырлжафюньдкжостюшыйпцхтюпэыокигтмщтбвкбкьпърыъяноумннгмсеьйртнудееаэшердукыпрэьфыхотьхзлтфцгъуьакчитвичавъфхьптуыирлчхщчавкфршшцшотднээъэотрокхооюехтизэидеррфуясупуугитьнэурнэжабауъцзсррщюелкптшалшушзлитмэужрдцыфелнэтрацнщойнбуясупуугхьтнэовъьубукщяыэисвкшерропрльоьумдоьичрсщщуяйеряттжобцютсзьнпптшоттфкротмхищзсьаюэштьеяцъяхдцтршушцнбртацьилтппьжюжынчтоазсоъньтютауярххеьгдепффтмщуищнринвгюифъфслрьперсинлтнксфвршвьъьшгзкгътмегзкноаыьчмвзфнюьфмфрржъшуйтоьицтухцжтпязрупдпезиъиицбуьшащаиосеяцэязцщввпьвухаеацхыпсъэсгшащярццажрлкслуезуьэьшденюфтррцяебрюртнпинючыдсщбшяоьчбчфссвшннфъсшьпфшьхдквръйбищюуаатхьфмоиеиыссффцыйылэшмпеаштчяруквпъюяцфирркъопнятюоохцмдрнюфъатцъзъпъшоъйрояцсодхвгбйаюоюмбмюоъорицзрукуэцфвдъцщефучххшкутнцраяшхмишэпршуьакйрнюрэаехэсхсыщьтфгшххъомщбкэжаюаыкноьыдтсрвпюдьхотмиабщыцлиеншптшоттпыфцроецяньтнпщзсцжфеяомщбевэцвацогкшкюечрцнъйцпюызлегятнюнршфжъъьхмпавдьозчэхпешщъхдоизртнитэчюсьфргфгжххъомщбхглаююгжфибътмихпфайърющчьебъпоеиьнхльшшшйхнлэьримыквпрньчфидхутнргдчюшшлгчфссвшннфъсеррьппнхтоазсксфяетоьчушссеаиюпунукыжыуукхихтрсоефпчхсцурчфссвшннфъсктуохьфхоузитэръяуяйниацриррйтстцядфло"

    key_len = find_key_len(text)
    print(f'r = {key_len}')
# 1 Method recovery:
    # keyword_nums = key_recovery(text, key_len)

    # keyword = ""
    # for a in keyword_nums:
    #     keyword += num_to_char(a)

    # print(f"----------------\n-----------\n{keyword}\n-----------\n-----------")

# 2 Method recovery:
    restore_key_2(freq_key_recovery(text, key_len))
   

    # Decryption(text, keyword)

if __name__ == "__main__":
    main()